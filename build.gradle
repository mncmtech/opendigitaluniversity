
ext.libsVersions = [
        gae              : "1.9.54",
        gaeDatanucleus   : "2.1.2",
        gaeJdo           : "3.1.3",
        gradleGae        : "1.9.49",
        resteasy         : "3.0.19.Final",
        objectify        : "5.1.15",
        jackson          : "2.8.7",
        servletApi       : "2.5",
        lombok           : "1.16.12",
        slf4jLog4j12     : "1.7.22",
        CommonsFileUpload: "1.3.1",
        Jsoup            : "1.9.2",
        Velocity         : "1.7"

]

ext.libraries = [
        servletApi       : "javax.servlet:servlet-api:${libsVersions.servletApi}",
        gaeJavaSdk       : "com.google.appengine:appengine-java-sdk:${libsVersions.gae}",
        gaeApiSdk        : "com.google.appengine:appengine-api-1.0-sdk:${libsVersions.gae}",
        gaeTest          : [
                "com.google.appengine:appengine-api-stubs:${libsVersions.gae}",
                "com.google.appengine:appengine-testing:${libsVersions.gae}",
                "com.google.appengine:appengine-tools-sdk:${libsVersions.gae}"
        ],
        gaeLabs          : "com.google.appengine:appengine-api-labs:${libsVersions.gae}",

        gaeJdo           : ["org.datanucleus:datanucleus-api-jdo:${libsVersions.gaeJdo}",
                            "com.google.appengine.orm:datanucleus-appengine:${libsVersions.gaeDatanucleus}",
                            "javax.jdo:jdo2-api:2.3-eb"],

        gradleGae        : "com.google.appengine:gradle-appengine-plugin:${libsVersions.gradleGae}",
        resteasy         : [
                "org.jboss.resteasy:resteasy-jaxrs:${libsVersions.resteasy}",
                "org.jboss.resteasy:resteasy-jackson2-provider:${libsVersions.resteasy}"
        ],
        jackson          : ["com.fasterxml.jackson.core:jackson-annotations:${libsVersions.jackson}",
                            "com.fasterxml.jackson.core:jackson-databind:${libsVersions.jackson}"
        ],

        objectify        : "com.googlecode.objectify:objectify:${libsVersions.objectify}",

        CommonsFileUpload: "commons-fileupload:commons-fileupload:${libsVersions.CommonsFileUpload}",
        GaeCloudStorage  : "com.google.appengine.tools:appengine-gcs-client:0.5",
        CommonsLang      : "org.apache.commons:commons-lang3:3.4",
        Jsoup            : "org.jsoup:jsoup:${libsVersions.Jsoup}",
        Velocity         : "org.apache.velocity:velocity:${libsVersions.Velocity}"
]

ext.config = [
        gae: [
                port           : [
                        api : 8885
                ],
                defaultJvmFlags: ['-Xdebug',
                                  '-agentlib:jdwp=transport=dt_socket,address=8079,server=y,suspend=n',
                                  '-Dappengine.fullscan.seconds=3',
                                  "-Ddatastore.backing_store=$projectDir/appengine-generated/local_db.bin",
                                  "-Ddatastore.generated_dir=$projectDir/appengine-generated",
                                  "-Dblobstore.backing_store=$projectDir/appengine-generated/blob"
                ],
                newDefaultJvmFlags: [
                        //'-Xdebug',
                        //'-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8181',
                        '-Dappengine.fullscan.seconds=3',
                        "-Ddatastore.backing_store=$projectDir/appengine-generated/local_db.bin".toString(),
                        "-Ddatastore.generated_dir=$projectDir/appengine-generated/".toString()
                ],
                serverVersion: '1',
                liveProjName: 'live-',
                stagProjName: 'staging-fullspectrum',
                storagePath : "$projectDir/appengine-generated/",

        ]
]

apply from:"./gradle/dependencies.gradle"

/** project configurations **/
allprojects {
    group 'com.opendigitaluniversity'
    version '1.0-SNAPSHOT'
}

subprojects {

    apply plugin: "java"
    apply plugin: 'idea'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    repositories {   // repositories for Jar's you access in your code
//        maven {
//            url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
//        }
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {

        compile libraries.objectify
        compile libraries.jackson

        compile "org.slf4j:slf4j-log4j12:${libsVersions.slf4jLog4j12}"

        compile "org.projectlombok:lombok:${libsVersions.lombok}"

        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    test {
        useJUnit()
        testLogging.showStandardStreams = true
        beforeTest { descriptor ->
            logger.lifecycle("config: " + descriptor + "  Running")
        }

        onOutput { descriptor, event ->
            logger.lifecycle("config: " + descriptor + ": " + event.message )
        }
        afterTest { descriptor, result ->
            logger.lifecycle("config: " + descriptor + ": " + result )
        }
    }

    ext.getDeployConfig = {

        def isLive = project.hasProperty('mode') && project.property('mode') == 'live'

        def deployConfig = [
                live : isLive,
                project : isLive ? config.gae.liveProjName : config.gae.stagProjName,
                stopPreviousVersion : !isLive,
                promote : !isLive
        ]
        return deployConfig
    }
}